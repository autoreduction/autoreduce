name: Tests
on: [push]

jobs:
  pytest:
    name: Pytest
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8"]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - uses: autoreduction/autoreduce-actions/build@main
        with:
          package_name: autoreduce_qp
          run_kafka: false

      - name: Run Kafka Broker
        run: |
          [ "true" = "${{ inputs.run_kafka }}" ] &&
          docker-compose -f "container/docker-compose.yml" up -d
        shell: bash

      - name: Remote dotenv to Environment (configserver alike)
        uses: Steph0/dotenv-configserver@v1.2.0
        with:
          repository: "autoreduction/autoreduce-workspace"

      - name: Run unit tests
        run: >-
          RUNNING_VIA_PYTEST=true pytest --ignore=autoreduce_qp/systemtests --cov=autoreduce_qp --cov-report=xml -v autoreduce_qp

      - name: Run system tests
        run: |
          RUNNING_VIA_PYTEST=true pytest autoreduce_qp/systemtests --cov-append -v

      - uses: codecov/codecov-action@v2
        with:
          files: ./coverage.xml
          name: codecov-umbrella
          flags: backend
          fail_ci_if_error: true
          verbose: true

      - name: Build package for publishing
        if: ${{ github.ref == 'refs/heads/main' }}
        run: python3 -m pip install wheel && python3 setup.py sdist bdist_wheel

      - name: Publish distribution ðŸ“¦ to PyPI
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

  dependency-check:
    name: Dependency-Check
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.6", "3.8"]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ job.container.image }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ job.container.image }}-pip-

      - name: Pip install
        run: |
          pip install --upgrade pip
          [ -f "requirements.txt" ] && pip install -r requirements.txt || echo "No requirements.txt found"
          pip install -e .

  Inspection:
    name: Code Inspection
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8"]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - uses: autoreduction/autoreduce-actions/build@main
        with:
          package_name: autoreduce_qp

      - uses: autoreduction/autoreduce-actions/code_inspection@main
        with:
          package_name: autoreduce_qp
